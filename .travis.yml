dist: xenial

language: cpp

# deploy filename
before_script:
 - REPOSITORY=`echo ${TRAVIS_REPO_SLUG} | cut -d/ -f2`
 - export DEPLOY_FILE_NAME=${REPOSITORY}_${TRAVIS_OS_NAME}-${TRAVIS_OSX_IMAGE:-$TRAVIS_COMPILER}_${TRAVIS_BRANCH}

# actual build script
script:
 - mkdir build
 - cd build
 - export CXXFLAGS=${CI_CXX_FLAGS} LDFLAGS=${CI_LDFLAGS}
 - cmake .. -G ${GENERATOR} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_BUILD_TYPE=${CONFIGURATION} -DCPACK_PACKAGE_FILE_NAME=${DEPLOY_FILE_NAME}
 - ninja
 - if [ $TRAVIS_REPO_SLUG == "skui-org/skui" ]; then ctest --output-on-failure; fi
 - if [ $TRAVIS_REPO_SLUG == "skui-org/3rdparty" ]; then cpack -G TXZ; fi

# deploy information
deploy:
  provider: releases
  api_key:
    secure: "vCSwGt0y+X1vsmiRDFB4BwaGv/FaNhFvZfaG5Kp2/Y821SqaszFl4cC6rwKWl4EhOrisLVNYWCTPfpCuWpJe/xocjb+ooqlD+6cYzkxiZG7cON2rAXxmt8CQ/rD9/hwGtdGr7HsqNewvv9fJ5S2t7o0Z2OMo0KRVz67+6wqAhK4XDN23GWvM/M03I7Qv/ZpIEWIJaCn/JMfOy3AgXslc6nLAFhHW6KI4xD4ibWd4CLEDlA9x89H9QpzHDnDJ23x5urIHiuHW0NZMs8/kPgpuCmOl+G/cEwT5Bi2RyJ2xI6hirwbm0xTwKDAx8VHeWrDjusNF1Ye4r+nJA2ZP/997Tk+1+dzwcgngyEa5rrtADdCdOEN4DgVT77rAzn0f7AB5NDP1joRA+A9fEOu5iFzjhtx1aFtf0XdTSDr3A5/LTWOpO2Yk5z7RuWu0tqJoEpJvVqxTPsgYlOd8uAWdQ5wFmfEpwP/KnvCuY8CjRGLaOcEUSPMm85wfGU4ouDVmiryI+5KHkyjWbGvcm805IW5Kxi35/p7nUffTbTh5x3zx49V4+YPq+vOzrgs+6FmQ5tbLulYdJuYDWOLeldMw+1fqPVaKaGIO5MCyVfguYcoVY52b+C6mHjj7y2/oAmtYsjkZZfcnNGgXg8DOCPfFbKcQLgQjdXEX15o4kVzBU49psSk="
  file: ${DEPLOY_FILE_NAME}.tar.xz
  skip_cleanup: true
  all_branches: true
  on:
    tags: true
    repo: skui-org/3rdparty

jobs:
  include:
    - os: linux
      compiler: gcc-7
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-8
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-9
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-9
        - CXX_COMPILER=g++-9
        - CONFIGURATION=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
    - os: linux
      compiler: gcc-8
      if: repo = skui-org/skui
      env:
        - GENERATOR=Ninja
        - C_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - CONFIGURATION=Debug
        - CI_CXX_FLAGS=--coverage
        - CI_LDFLAGS=--coverage
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_lcov.sh 1.14
      after_success:
        - lcov --directory . --capture --output-file coverage.info --gcov-tool gcov-8 # capture coverage info
        - lcov --remove coverage.info '/usr/*' '*/tests/*' '*/tests/*' '*/3rdparty/*' --output-file coverage.info # filter out system and tests
        - lcov --list coverage.info # debug info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
    - os: linux
      compiler: clang-6.0
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-6.0
        - CXX_COMPILER=clang++-6.0
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-6.0
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 6.0.1 /usr
    - os: linux
      compiler: clang-7
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-7
        - CXX_COMPILER=clang++-7
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-7
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 7.1.0 /usr
    - os: linux
      compiler: clang-8
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-8
        - CXX_COMPILER=clang++-8
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-8
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 8.0.1 /usr
    - os: linux
      compiler: clang-9
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-9
        - CXX_COMPILER=clang++-9
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-9
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 9.0.1 /usr
    - os: linux
      compiler: clang-10
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang-10
        - CXX_COMPILER=clang++-10
        - CONFIGURATION=Release
      addons:
        apt:
          packages:
            - clang-10
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libgles2-mesa-dev
            - libxcb-util0-dev
            - libxcb-image0-dev
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Linux
        - . ./ci/setup_ninja.sh 1.8.2 linux
        - . ./ci/setup_libcxx.sh 10.0.1 /usr
    - os: osx
      osx_image: xcode11.6
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang
        - CXX_COMPILER=clang++
        - CI_CXX_FLAGS='-D_LIBCPP_DISABLE_AVAILABILITY -Wno-unused-command-line-argument -nostdinc++ -isystem /Users/travis/libc++/include/c++/v1'
        - CI_LDFLAGS='-L /Users/travis/libc++/lib'
        - CONFIGURATION=Release
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Darwin
        - . ./ci/setup_ninja.sh 1.8.2 mac
        - . ./ci/setup_libcxx.sh 8.0.1 /Users/travis/libc++
    - os: osx
      osx_image: xcode12
      env:
        - GENERATOR=Ninja
        - C_COMPILER=clang
        - CXX_COMPILER=clang++
        - CI_CXX_FLAGS='-D_LIBCPP_DISABLE_AVAILABILITY -Wno-unused-command-line-argument -nostdinc++ -isystem /Users/travis/libc++/include/c++/v1'
        - CI_LDFLAGS='-L /Users/travis/libc++/lib'
        - CONFIGURATION=Release
      before_install:
        - . ./ci/setup_cmake.sh 3.16.4 Darwin
        - . ./ci/setup_ninja.sh 1.8.2 mac
        - . ./ci/setup_libcxx.sh 10.0.1 /Users/travis/libc++
